/* automatically generated by rust-bindgen 0.57.0 */

pub type size_t = ::std::os::raw::c_ulong;
pub type __uint64_t = ::std::os::raw::c_ulong;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_cache_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_comparator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_env_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_filterpolicy_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_iterator_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_logger_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_options_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_readoptions_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_snapshot_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_writebatch_t {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct leveldb_writeoptions_t {
    _unused: [u8; 0],
}

extern "C" {
    pub fn leveldb_open(
        options: *const leveldb_options_t,
        name: *const ::std::os::raw::c_char,
        errptr: *mut *mut ::std::os::raw::c_char,
    ) -> *mut leveldb_t;
    pub fn leveldb_close(db: *mut leveldb_t);
    pub fn leveldb_put(
        db: *mut leveldb_t,
        options: *const leveldb_writeoptions_t,
        key: *const ::std::os::raw::c_char,
        keylen: size_t,
        val: *const ::std::os::raw::c_char,
        vallen: size_t,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
    pub fn leveldb_delete(
        db: *mut leveldb_t,
        options: *const leveldb_writeoptions_t,
        key: *const ::std::os::raw::c_char,
        keylen: size_t,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
    pub fn leveldb_write(
        db: *mut leveldb_t,
        options: *const leveldb_writeoptions_t,
        batch: *mut leveldb_writebatch_t,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
    pub fn leveldb_get(
        db: *mut leveldb_t,
        options: *const leveldb_readoptions_t,
        key: *const ::std::os::raw::c_char,
        keylen: size_t,
        vallen: *mut size_t,
        errptr: *mut *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn leveldb_create_iterator(
        db: *mut leveldb_t,
        options: *const leveldb_readoptions_t,
    ) -> *mut leveldb_iterator_t;
    pub fn leveldb_create_snapshot(db: *mut leveldb_t) -> *const leveldb_snapshot_t;
    pub fn leveldb_release_snapshot(db: *mut leveldb_t, snapshot: *const leveldb_snapshot_t);
    pub fn leveldb_property_value(
        db: *mut leveldb_t,
        propname: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn leveldb_approximate_sizes(
        db: *mut leveldb_t,
        num_ranges: ::std::os::raw::c_int,
        range_start_key: *const *const ::std::os::raw::c_char,
        range_start_key_len: *const size_t,
        range_limit_key: *const *const ::std::os::raw::c_char,
        range_limit_key_len: *const size_t,
        sizes: *mut u64,
    );
    pub fn leveldb_compact_range(
        db: *mut leveldb_t,
        start_key: *const ::std::os::raw::c_char,
        start_key_len: size_t,
        limit_key: *const ::std::os::raw::c_char,
        limit_key_len: size_t,
    );
    pub fn leveldb_destroy_db(
        options: *const leveldb_options_t,
        name: *const ::std::os::raw::c_char,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
    pub fn leveldb_repair_db(
        options: *const leveldb_options_t,
        name: *const ::std::os::raw::c_char,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
    pub fn leveldb_iter_destroy(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_valid(arg1: *const leveldb_iterator_t) -> ::std::os::raw::c_uchar;
    pub fn leveldb_iter_seek_to_first(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_seek_to_last(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_seek(
        arg1: *mut leveldb_iterator_t,
        k: *const ::std::os::raw::c_char,
        klen: size_t,
    );
    pub fn leveldb_iter_next(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_prev(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_key(
        arg1: *const leveldb_iterator_t,
        klen: *mut size_t,
    ) -> *const ::std::os::raw::c_char;
    pub fn leveldb_iter_value(
        arg1: *const leveldb_iterator_t,
        vlen: *mut size_t,
    ) -> *const ::std::os::raw::c_char;
    pub fn leveldb_iter_get_error(
        arg1: *const leveldb_iterator_t,
        errptr: *mut *mut ::std::os::raw::c_char,
    );
    pub fn leveldb_writebatch_create() -> *mut leveldb_writebatch_t;
    pub fn leveldb_writebatch_destroy(arg1: *mut leveldb_writebatch_t);
    pub fn leveldb_writebatch_clear(arg1: *mut leveldb_writebatch_t);
    pub fn leveldb_writebatch_put(
        arg1: *mut leveldb_writebatch_t,
        key: *const ::std::os::raw::c_char,
        klen: size_t,
        val: *const ::std::os::raw::c_char,
        vlen: size_t,
    );
    pub fn leveldb_writebatch_delete(
        arg1: *mut leveldb_writebatch_t,
        key: *const ::std::os::raw::c_char,
        klen: size_t,
    );
    pub fn leveldb_writebatch_iterate(
        arg1: *mut leveldb_writebatch_t,
        state: *mut ::std::os::raw::c_void,
        put: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                k: *const ::std::os::raw::c_char,
                klen: size_t,
                v: *const ::std::os::raw::c_char,
                vlen: size_t,
            ),
        >,
        deleted: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                k: *const ::std::os::raw::c_char,
                klen: size_t,
            ),
        >,
    );
    pub fn leveldb_options_create() -> *mut leveldb_options_t;
    pub fn leveldb_options_destroy(arg1: *mut leveldb_options_t);
    pub fn leveldb_options_set_comparator(
        arg1: *mut leveldb_options_t,
        arg2: *mut leveldb_comparator_t,
    );
    pub fn leveldb_options_set_filter_policy(
        arg1: *mut leveldb_options_t,
        arg2: *mut leveldb_filterpolicy_t,
    );
    pub fn leveldb_options_set_create_if_missing(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_uchar,
    );
    pub fn leveldb_options_set_error_if_exists(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_uchar,
    );
    pub fn leveldb_options_set_paranoid_checks(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_uchar,
    );
    pub fn leveldb_options_set_env(arg1: *mut leveldb_options_t, arg2: *mut leveldb_env_t);
    pub fn leveldb_options_set_info_log(arg1: *mut leveldb_options_t, arg2: *mut leveldb_logger_t);
    pub fn leveldb_options_set_write_buffer_size(arg1: *mut leveldb_options_t, arg2: size_t);
    pub fn leveldb_options_set_max_open_files(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_int,
    );
    pub fn leveldb_options_set_cache(arg1: *mut leveldb_options_t, arg2: *mut leveldb_cache_t);
    pub fn leveldb_options_set_block_size(arg1: *mut leveldb_options_t, arg2: size_t);
    pub fn leveldb_options_set_block_restart_interval(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_int,
    );
    pub fn leveldb_options_set_compression(
        arg1: *mut leveldb_options_t,
        arg2: ::std::os::raw::c_int,
    );
    pub fn leveldb_comparator_create(
        state: *mut ::std::os::raw::c_void,
        destructor: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
        compare: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                a: *const ::std::os::raw::c_char,
                alen: size_t,
                b: *const ::std::os::raw::c_char,
                blen: size_t,
            ) -> ::std::os::raw::c_int,
        >,
        name: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
            ) -> *const ::std::os::raw::c_char,
        >,
    ) -> *mut leveldb_comparator_t;
    pub fn leveldb_comparator_destroy(arg1: *mut leveldb_comparator_t);
    pub fn leveldb_filterpolicy_create(
        state: *mut ::std::os::raw::c_void,
        destructor: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
        create_filter: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                key_array: *const *const ::std::os::raw::c_char,
                key_length_array: *const size_t,
                num_keys: ::std::os::raw::c_int,
                filter_length: *mut size_t,
            ) -> *mut ::std::os::raw::c_char,
        >,
        key_may_match: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                key: *const ::std::os::raw::c_char,
                length: size_t,
                filter: *const ::std::os::raw::c_char,
                filter_length: size_t,
            ) -> ::std::os::raw::c_uchar,
        >,
        name: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
            ) -> *const ::std::os::raw::c_char,
        >,
    ) -> *mut leveldb_filterpolicy_t;
    pub fn leveldb_filterpolicy_destroy(arg1: *mut leveldb_filterpolicy_t);
    pub fn leveldb_filterpolicy_create_bloom(
        bits_per_key: ::std::os::raw::c_int,
    ) -> *mut leveldb_filterpolicy_t;
    pub fn leveldb_readoptions_create() -> *mut leveldb_readoptions_t;
    pub fn leveldb_readoptions_destroy(arg1: *mut leveldb_readoptions_t);
    pub fn leveldb_readoptions_set_verify_checksums(
        arg1: *mut leveldb_readoptions_t,
        arg2: ::std::os::raw::c_uchar,
    );
    pub fn leveldb_readoptions_set_fill_cache(
        arg1: *mut leveldb_readoptions_t,
        arg2: ::std::os::raw::c_uchar,
    );
    pub fn leveldb_readoptions_set_snapshot(
        arg1: *mut leveldb_readoptions_t,
        arg2: *const leveldb_snapshot_t,
    );
    pub fn leveldb_writeoptions_create() -> *mut leveldb_writeoptions_t;
    pub fn leveldb_writeoptions_destroy(arg1: *mut leveldb_writeoptions_t);
    pub fn leveldb_writeoptions_set_sync(
        arg1: *mut leveldb_writeoptions_t,
        arg2: ::std::os::raw::c_uchar,
    );
    pub fn leveldb_cache_create_lru(capacity: size_t) -> *mut leveldb_cache_t;
    pub fn leveldb_cache_destroy(cache: *mut leveldb_cache_t);
    pub fn leveldb_create_default_env() -> *mut leveldb_env_t;
    pub fn leveldb_env_destroy(arg1: *mut leveldb_env_t);
    pub fn leveldb_free(ptr: *mut ::std::os::raw::c_void);
    pub fn leveldb_major_version() -> ::std::os::raw::c_int;
    pub fn leveldb_minor_version() -> ::std::os::raw::c_int;
}
